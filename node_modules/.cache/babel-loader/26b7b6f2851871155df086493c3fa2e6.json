{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"D:/Projects/groovio-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/groovio-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"D:/Projects/groovio-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:/Projects/groovio-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import axios from'axios';import Cookie from\"universal-cookie\";import'./Main.scss';//Components import\nimport TopArtists from'../TopArtists/TopArtists';import Player from'../Player/Player';import Genres from'../Genres/Genres';import TopCharts from'../TopCharts/TopCharts';import Search from'../Search/Search';import Profile from'../Profile/Profile';//Content import\nimport anonImage from'../../content/anon.png';var cookies=new Cookie();var Main=function Main(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),fetchedArtists=_useState2[0],setFetchedArtists=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),fetchedTracks=_useState4[0],setFetchedTracks=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),currentTrack=_useState6[0],setCurrentTrack=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),currentArtist=_useState8[0],setCurrentArtist=_useState8[1];var cancel_token;var getUniqueListBy=function getUniqueListBy(arr,key){return _toConsumableArray(new Map(arr.map(function(item){return[item[key],item];})).values());};var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(val){var options,artistArray,trackArray,artistRequest,artistResponse,trackRequest,trackResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;cancel_token&&cancel_token.cancel();cancel_token=axios.CancelToken.source();options={headers:{Authorization:\"Bearer \"+cookies.get(\"accessToken\")},cancelToken:cancel_token.token};artistArray=[];trackArray=[];if(!(cookies.get(\"accessToken\")&&val.length>7&&val.startsWith(\"artist:\"))){_context.next=18;break;}_context.next=9;return axios.get(\"https://api.spotify.com/v1/search?q=\".concat(val.substring(7),\"&type=artist\"),options);case 9:artistRequest=_context.sent;_context.next=12;return artistRequest.data.artists.items;case 12:artistResponse=_context.sent;_context.next=15;return artistResponse.forEach(function(el){artistArray.push(el);});case 15:setFetchedArtists(getUniqueListBy(artistArray,\"id\"));_context.next=32;break;case 18:if(!(cookies.get(\"accessToken\")&&val.length>6&&val.startsWith(\"track:\"))){_context.next=30;break;}_context.next=21;return axios.get(\"https://api.spotify.com/v1/search?q=\".concat(val.substring(6),\"&type=track\"),options);case 21:trackRequest=_context.sent;_context.next=24;return trackRequest.data.tracks.items;case 24:trackResponse=_context.sent;_context.next=27;return trackResponse.forEach(function(el){trackArray.push(el);});case 27:setFetchedTracks(getUniqueListBy(trackArray,\"id\"));_context.next=32;break;case 30:setFetchedArtists([]);setFetchedTracks([]);case 32:_context.next=37;break;case 34:_context.prev=34;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 37:case\"end\":return _context.stop();}}},_callee,null,[[0,34]]);}));return function fetchData(_x){return _ref.apply(this,arguments);};}();var fetchResult=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id,type){var options,request,response,_request,_response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:options={headers:{Authorization:\"Bearer \"+cookies.get(\"accessToken\")}};if(!(type==='artist')){_context2.next=16;break;}_context2.prev=2;_context2.next=5;return axios.get(\"https://api.spotify.com/v1/artists/\".concat(id),options);case 5:request=_context2.sent;_context2.next=8;return request.data;case 8:response=_context2.sent;_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](2);console.log(_context2.t0);case 14:_context2.next=29;break;case 16:_context2.prev=16;_context2.next=19;return axios.get(\"https://api.spotify.com/v1/tracks/\".concat(id),options);case 19:_request=_context2.sent;_context2.next=22;return _request.data;case 22:_response=_context2.sent;setCurrentTrack(_response.preview_url);_context2.next=29;break;case 26:_context2.prev=26;_context2.t1=_context2[\"catch\"](16);console.log(_context2.t1);case 29:case\"end\":return _context2.stop();}}},_callee2,null,[[2,11],[16,26]]);}));return function fetchResult(_x2,_x3){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"Main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Main__upper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Main__header\",children:[/*#__PURE__*/_jsx(Search,{passData:function passData(value){return fetchData(value);}}),/*#__PURE__*/_jsx(Profile,{})]}),function(){switch(true){case fetchedTracks.length>0:return/*#__PURE__*/_jsx(\"div\",{className:\"Main__results\",children:fetchedTracks.map(function(el,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"Main__result-box\",children:[/*#__PURE__*/_jsx(\"img\",{src:el.album.images.length?el.album.images[0].url:anonImage,alt:\"Result\",className:\"Main__result-image\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return fetchResult(el.id,'track');},className:\"Main__result-btn\",children:el.name})]},index);})});case fetchedArtists.length>0:return/*#__PURE__*/_jsx(\"div\",{className:\"Main__results\",children:fetchedArtists.map(function(el,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"Main__result-box\",children:[/*#__PURE__*/_jsx(\"img\",{src:el.images.length?el.images[0].url:anonImage,alt:\"Result\",className:\"Main__result-image\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return fetchResult(el.id,'artist');},className:\"Main__result-btn\",children:el.name})]},index);})});default:return null;}}()]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Main__tiles-box\",children:[/*#__PURE__*/_jsx(TopArtists,{}),/*#__PURE__*/_jsx(Player,{currentTrack:currentTrack}),/*#__PURE__*/_jsx(Genres,{}),/*#__PURE__*/_jsx(TopCharts,{})]})]});};export default Main;","map":{"version":3,"sources":["D:/Projects/groovio-player/src/components/Main/Main.jsx"],"names":["React","useState","axios","Cookie","TopArtists","Player","Genres","TopCharts","Search","Profile","anonImage","cookies","Main","fetchedArtists","setFetchedArtists","fetchedTracks","setFetchedTracks","currentTrack","setCurrentTrack","currentArtist","setCurrentArtist","cancel_token","getUniqueListBy","arr","key","Map","map","item","values","fetchData","val","cancel","CancelToken","source","options","headers","Authorization","get","cancelToken","token","artistArray","trackArray","length","startsWith","substring","artistRequest","data","artists","items","artistResponse","forEach","el","push","trackRequest","tracks","trackResponse","console","log","fetchResult","id","type","request","response","preview_url","value","index","album","images","url","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Cookie from \"universal-cookie\";\r\n\r\nimport './Main.scss';\r\n\r\n//Components import\r\nimport TopArtists from '../TopArtists/TopArtists';\r\nimport Player from '../Player/Player';\r\nimport Genres from '../Genres/Genres';\r\nimport TopCharts from '../TopCharts/TopCharts';\r\nimport Search from '../Search/Search';\r\nimport Profile from '../Profile/Profile';\r\n\r\n//Content import\r\nimport anonImage from '../../content/anon.png';\r\n\r\nconst cookies = new Cookie();\r\n\r\nconst Main = () => {\r\n    const [fetchedArtists, setFetchedArtists] = useState([]);\r\n    const [fetchedTracks, setFetchedTracks] = useState([]);\r\n    const [currentTrack, setCurrentTrack] = useState('');\r\n    const [currentArtist, setCurrentArtist] = useState('');\r\n\r\n    let cancel_token;\r\n\r\n    const getUniqueListBy = (arr, key) => {\r\n        return [...new Map(arr.map((item) => [item[key], item])).values()];\r\n    };\r\n\r\n    const fetchData = async val => {\r\n        try {\r\n            cancel_token && cancel_token.cancel();\r\n\r\n            cancel_token = axios.CancelToken.source();\r\n\r\n            const options = {\r\n                headers: {Authorization: \"Bearer \" + cookies.get(\"accessToken\")},\r\n                cancelToken: cancel_token.token\r\n            };\r\n\r\n            let artistArray = [];\r\n            let trackArray = [];\r\n\r\n            if (\r\n                cookies.get(\"accessToken\") &&\r\n                val.length > 7 &&\r\n                val.startsWith(\"artist:\")\r\n            ) {\r\n                const artistRequest = await axios.get(\r\n                    `https://api.spotify.com/v1/search?q=${val.substring(7)}&type=artist`,\r\n                    options\r\n                );\r\n                const artistResponse = await artistRequest.data.artists.items;\r\n\r\n                await artistResponse.forEach((el) => {\r\n                    artistArray.push(el);\r\n                });\r\n\r\n                setFetchedArtists(getUniqueListBy(artistArray, \"id\"));\r\n            } else if (\r\n                cookies.get(\"accessToken\") &&\r\n                val.length > 6 &&\r\n                val.startsWith(\"track:\")\r\n            ) {\r\n                const trackRequest = await axios.get(\r\n                    `https://api.spotify.com/v1/search?q=${val.substring(6)}&type=track`,\r\n                    options\r\n                );\r\n                const trackResponse = await trackRequest.data.tracks.items;\r\n\r\n                await trackResponse.forEach((el) => {\r\n                    trackArray.push(el);\r\n                });\r\n\r\n                setFetchedTracks(getUniqueListBy(trackArray, \"id\"));\r\n            } else {\r\n                setFetchedArtists([]);\r\n                setFetchedTracks([]);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const fetchResult = async (id, type) => {\r\n        const options = {\r\n            headers: {Authorization: \"Bearer \" + cookies.get(\"accessToken\")}\r\n        };\r\n\r\n        if (type === 'artist') {\r\n            try {\r\n                const request = await axios.get(`https://api.spotify.com/v1/artists/${id}`, options);\r\n                const response = await request.data;\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } else {\r\n            try {\r\n                const request = await axios.get(`https://api.spotify.com/v1/tracks/${id}`, options);\r\n                const response = await request.data;\r\n\r\n                setCurrentTrack(response.preview_url)\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='Main'>\r\n            <div className='Main__upper'>\r\n                <div className=\"Main__header\">\r\n                    <Search passData={value => fetchData(value)} />\r\n                    <Profile />\r\n                </div>\r\n                {(() => {\r\n                    switch (true) {\r\n                        case fetchedTracks.length > 0:\r\n                            return (\r\n                                <div className=\"Main__results\">\r\n                                    {fetchedTracks.map((el, index) => {\r\n                                        return (\r\n                                            <div key={index} className=\"Main__result-box\">\r\n                                                <img src={el.album.images.length ? el.album.images[0].url : anonImage} alt=\"Result\" className=\"Main__result-image\" />\r\n                                                <button onClick={() => fetchResult(el.id, 'track')} className=\"Main__result-btn\">{el.name}</button>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            );\r\n                        case fetchedArtists.length > 0:\r\n                            return (\r\n                                <div className=\"Main__results\">\r\n                                    {fetchedArtists.map((el, index) => {\r\n                                        return (\r\n                                            <div key={index} className=\"Main__result-box\">\r\n                                                <img src={el.images.length ? el.images[0].url : anonImage} alt=\"Result\" className=\"Main__result-image\" />\r\n                                                <button onClick={() => fetchResult(el.id, 'artist')} className=\"Main__result-btn\">{el.name}</button>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            );\r\n                        default:\r\n                            return null;\r\n                    }\r\n                })()}\r\n            </div>\r\n\r\n            <div className='Main__tiles-box'>\r\n                <TopArtists />\r\n                <Player currentTrack={currentTrack} />\r\n                <Genres />\r\n                <TopCharts />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}